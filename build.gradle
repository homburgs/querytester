import org.jetbrains.intellij.platform.gradle.IntelliJPlatformType
import org.jetbrains.intellij.platform.gradle.TestFrameworkType

import java.text.SimpleDateFormat

plugins {
    id "java"
    id 'org.jetbrains.intellij.platform' version '2.3.0'
    id "org.jetbrains.changelog" version "2.2.1"
}

group = "com.hsofttec.intellij"
version = "${pluginVersion}"

sourceCompatibility = javaSourceVersion
targetCompatibility = javaTargetVersion

repositories {
    mavenLocal()
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
    maven {
        authentication {
            basic(BasicAuthentication)
        }
        credentials {
            username ceyoniq_artifact_username
            password ceyoniq_artifact_password
        }
        url "https://artifact.nscale.eu/repository/nscale-java-advanced-connector"
    }
}

apply plugin: 'org.jetbrains.intellij.platform'
apply plugin: 'org.jetbrains.changelog'

intellijPlatform {
    pluginConfiguration {
        name = "QueryTester"
        version = "${pluginVersion}"
//        updateSinceUntilBuild = false
        buildSearchableOptions = false
//        downloadSources = false
        vendor {
            name = 'Sven Homburg'
            email = 'Sven.Homburg@hsofttec.com'
        }
        ideaVersion {
            sinceBuild = '243'
        }
        patchPluginXml {
            sinceBuild.set("243")
            changeNotes.set(provider { changelog.getLatest().toHTML() })
        }
        signing {
            certificateChain = System.getenv("CERTIFICATE_CHAIN")
            privateKey = System.getenv("PRIVATE_KEY")
            password = System.getenv("PRIVATE_KEY_PASSWORD")
        }
        changelog {
            path = "${project.projectDir}/CHANGELOG.md"
            header = "[${-> version.get()}] - ${new SimpleDateFormat("yyyy-MM-dd").format(new Date())}"
            headerParserRegex = ~/(\d+\.\d+\.\d+)/
            itemPrefix = "-"
            keepUnreleasedSection = true
            unreleasedTerm = "[Unreleased]"
            groups = ["Added", "Changed", "Fixed", "Security"]
        }
    }
    pluginVerification {
        ides {
            ide IntelliJPlatformType.IntellijIdeaCommunity, "2024.3"
        }
    }
    publishing {
        token = "${jetbrains_marketplace_token_querytester}"
    }
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation('commons-beanutils:commons-beanutils:1.9.4') {
        exclude group: "commons-collections"
    }
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.github.lgooddatepicker:LGoodDatePicker:11.2.1'
    implementation("com.ceyoniq.nscale.applicationlayer:al-advanced-connector:8.2.1100") {
        exclude group: "org.slf4j"
    }

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    intellijPlatform {
        intellijIdeaCommunity '2024.3.3'

        bundledPlugin 'com.intellij.java'

        pluginVerifier()
        zipSigner()
        instrumentationTools()

        testFramework TestFrameworkType.Platform.INSTANCE
    }

    testImplementation 'junit:junit:4.13.2'
}

// check for existing property
//if (findProperty("jetbrains_marketplace_token_querytester")) {
//    publishPlugin {
//        token = "${jetbrains_marketplace_token_querytester}"
//    }
//}
